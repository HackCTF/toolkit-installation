{"comment":"Created by Image Factory","created":"2024-10-23T02:20:58.642392973Z","container":"f5517aba8d105d1aef00c2280d948d489f11e141f33fd329c066016ef6a16d14","container_config":{"Hostname":"0946a5221b54","Domainname":"","User":"1001","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"6379/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["DISTTAG=f38container","FGC=f38","container=oci","PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","ARCH=x86_64","STI_SCRIPTS_URL=image:///usr/libexec/s2i","STI_SCRIPTS_PATH=/usr/libexec/s2i","APP_ROOT=/opt/app-root","PLATFORM=fedora","NAME=redis","VERSION=7","REDIS_VERSION=7","HOME=/var/lib/redis","SUMMARY=Redis in-memory data structure store, used as database, cache and message broker","DESCRIPTION=Redis 7 available as container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.","CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/redis","REDIS_PREFIX=/usr","REDIS_CONF=/etc/redis/redis.conf"],"Cmd":["run-redis"],"Image":"","Volumes":{"/var/lib/redis/data":{}},"WorkingDir":"/opt/app-root/src","Entrypoint":["container-entrypoint"],"OnBuild":[],"Labels":{"com.redhat.component":"redis","description":"Redis 7 available as container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.","io.buildah.version":"1.23.1","io.k8s.description":"Redis in-memory data structure store, used as database, cache and message broker","io.k8s.display-name":"Redis 7","io.openshift.expose-services":"6379:redis","io.openshift.s2i.scripts-url":"image:///usr/libexec/s2i","io.openshift.tags":"database,redis,redis7","io.s2i.scripts-url":"image:///usr/libexec/s2i","license":"MIT","maintainer":"SoftwareCollections.org \u003csclorg@redhat.com\u003e","name":"fedora/redis-7","summary":"Redis in-memory data structure store, used as database, cache and message broker","usage":"docker run -d --name redis_database -p 6379:6379 quay.io/fedora/redis-7","vendor":"Fedora Project","version":"7"}},"config":{"Hostname":"0946a5221b54","Domainname":"","User":"1001","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"6379/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["DISTTAG=f38container","FGC=f38","container=oci","PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","ARCH=x86_64","STI_SCRIPTS_URL=image:///usr/libexec/s2i","STI_SCRIPTS_PATH=/usr/libexec/s2i","APP_ROOT=/opt/app-root","PLATFORM=fedora","NAME=redis","VERSION=7","REDIS_VERSION=7","HOME=/var/lib/redis","SUMMARY=Redis in-memory data structure store, used as database, cache and message broker","DESCRIPTION=Redis 7 available as container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.","CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/redis","REDIS_PREFIX=/usr","REDIS_CONF=/etc/redis/redis.conf"],"Cmd":["run-redis"],"Image":"","Volumes":{"/var/lib/redis/data":{}},"WorkingDir":"/opt/app-root/src","Entrypoint":["container-entrypoint"],"OnBuild":[],"Labels":{"com.redhat.component":"redis","description":"Redis 7 available as container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.","io.buildah.version":"1.23.1","io.k8s.description":"Redis in-memory data structure store, used as database, cache and message broker","io.k8s.display-name":"Redis 7","io.openshift.expose-services":"6379:redis","io.openshift.s2i.scripts-url":"image:///usr/libexec/s2i","io.openshift.tags":"database,redis,redis7","io.s2i.scripts-url":"image:///usr/libexec/s2i","license":"MIT","maintainer":"SoftwareCollections.org \u003csclorg@redhat.com\u003e","name":"fedora/redis-7","summary":"Redis in-memory data structure store, used as database, cache and message broker","usage":"docker run -d --name redis_database -p 6379:6379 quay.io/fedora/redis-7","vendor":"Fedora Project","version":"7"}},"architecture":"amd64","os":"linux","parent":"sha256:d1ba0e4a9c50755405bd21a24b7e9e329bee7041679b8e6636cce6c54462da03","rootfs":{"type":"layers","diff_ids":["sha256:c12fdfa4ea5b7d6efc14a116bd49660835bd9a960dd1e256962eb1d88359408e","sha256:814b81223a123c34cb11b5affe926540389df7be8eb913bd1f396b447619e90d","sha256:dc62c1010f0f6f8515081968b6f57bf2076409da76845c5a0ab3c9c0233746f0"]},"history":[{"created":"2024-01-25T06:49:26Z","comment":"Created by Image Factory"},{"created":"2024-07-09T02:04:25.546255915Z","created_by":"/bin/sh -c #(nop) ENV SUMMARY=\"Base image which allows using of source-to-image.\"\t    DESCRIPTION=\"The s2i-core image provides any images layered on top of it with all the tools needed to use source-to-image functionality while keeping the image size as small as possible.\"     NAME=s2i-core     VERSION=38     ARCH=x86_64","empty_layer":true},{"created":"2024-07-09T02:04:25.546374208Z","created_by":"/bin/sh -c #(nop) LABEL summary=\"$SUMMARY\"       description=\"$DESCRIPTION\"       io.k8s.description=\"$DESCRIPTION\"       io.k8s.display-name=\"s2i core\"       io.openshift.s2i.scripts-url=image:///usr/libexec/s2i       io.s2i.scripts-url=image:///usr/libexec/s2i       com.redhat.component=\"$NAME\"       name=\"fedora/$NAME\"       version=\"$VERSION\"       usage=\"This image is supposed to be used as a base image for other images that support source-to-image\"       maintainer=\"SoftwareCollections.org \u003csclorg@redhat.com\u003e\"","empty_layer":true},{"created":"2024-07-09T02:04:25.546921041Z","created_by":"/bin/sh -c #(nop) ENV     STI_SCRIPTS_URL=image:///usr/libexec/s2i     STI_SCRIPTS_PATH=/usr/libexec/s2i     APP_ROOT=/opt/app-root     HOME=/opt/app-root/src     PATH=/opt/app-root/src/bin:/opt/app-root/bin:$PATH     PLATFORM=\"fedora\"","empty_layer":true},{"created":"2024-07-09T02:05:11.426000971Z","created_by":"/bin/sh -c INSTALL_PKGS=\"bsdtar   findutils   gettext   glibc-langpack-en   groff-base   rsync   tar   unzip\" \u0026\u0026   mkdir -p ${HOME}/.pki/nssdb \u0026\u0026   chown -R 1001:0 ${HOME}/.pki \u0026\u0026   dnf install -y --setopt=tsflags=nodocs $INSTALL_PKGS \u0026\u0026   rpm -V $INSTALL_PKGS \u0026\u0026   dnf clean all -y","empty_layer":true},{"created":"2024-07-09T02:05:11.51529988Z","created_by":"/bin/sh -c #(nop) COPY dir:fd3eb1b942cbbde21e2723a45d11b2f3449c83d34ef89e4f46a3ee9d77c12d15 in / ","empty_layer":true},{"created":"2024-07-09T02:05:11.625380666Z","created_by":"/bin/sh -c [ -e /usr/libexec/platform-python ] || ln -s /usr/bin/python3 /usr/libexec/platform-python","empty_layer":true},{"created":"2024-07-09T02:05:11.641958726Z","created_by":"/bin/sh -c #(nop) WORKDIR ${HOME}","empty_layer":true},{"created":"2024-07-09T02:05:11.658857051Z","created_by":"/bin/sh -c #(nop) ENTRYPOINT [\"container-entrypoint\"]","empty_layer":true},{"created":"2024-07-09T02:05:11.674550197Z","created_by":"/bin/sh -c #(nop) CMD [\"base-usage\"]","empty_layer":true},{"created":"2024-07-09T02:05:14.252097141Z","created_by":"/bin/sh -c rpm-file-permissions \u0026\u0026   useradd -u 1001 -r -g 0 -d ${HOME} -c \"Default Application User\" default \u0026\u0026   chown -R 1001:0 ${APP_ROOT}","comment":"FROM quay.io/fedora/fedora:38"},{"created":"2024-10-23T02:20:17.644251123Z","created_by":"/bin/sh -c #(nop) ENV NAME=redis     VERSION=7","empty_layer":true},{"created":"2024-10-23T02:20:17.665671724Z","created_by":"/bin/sh -c #(nop) ENV REDIS_VERSION=$VERSION     HOME=/var/lib/redis","empty_layer":true},{"created":"2024-10-23T02:20:17.687347284Z","created_by":"/bin/sh -c #(nop) ENV SUMMARY=\"Redis in-memory data structure store, used as database, cache and message broker\"     DESCRIPTION=\"Redis $REDIS_VERSION available as container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.\"","empty_layer":true},{"created":"2024-10-23T02:20:17.706973772Z","created_by":"/bin/sh -c #(nop) LABEL summary=\"$SUMMARY\"       description=\"$DESCRIPTION\"       io.k8s.description=\"$SUMMARY\"       io.k8s.display-name=\"Redis 7\"       io.openshift.expose-services=\"6379:redis\"       io.openshift.tags=\"database,redis,redis7\"       com.redhat.component=\"$NAME\"       name=\"fedora/$NAME-$VERSION\"       version=\"$VERSION\"       usage=\"docker run -d --name redis_database -p 6379:6379 quay.io/fedora/$NAME-$VERSION\"       maintainer=\"SoftwareCollections.org \u003csclorg@redhat.com\u003e\"","empty_layer":true},{"created":"2024-10-23T02:20:17.72786038Z","created_by":"/bin/sh -c #(nop) EXPOSE 6379","empty_layer":true},{"created":"2024-10-23T02:20:58.22062789Z","created_by":"/bin/sh -c getent group  redis \u0026\u003e /dev/null || groupadd -r redis \u0026\u003e /dev/null \u0026\u0026     usermod -l redis -aG redis -c 'Redis Server' default \u0026\u003e /dev/null \u0026\u0026     dnf install -y yum-utils gettext policycoreutils \u0026\u0026     INSTALL_PKGS=\"redis\" \u0026\u0026     dnf install -y --setopt=tsflags=nodocs --nogpgcheck $INSTALL_PKGS \u0026\u0026     rpm -V $INSTALL_PKGS \u0026\u0026     dnf clean all \u0026\u0026     redis-server --version | grep -qe \"^Redis server v=$REDIS_VERSION\\.\" \u0026\u0026 echo \"Found VERSION $REDIS_VERSION\" \u0026\u0026     mkdir -p /var/lib/redis/data \u0026\u0026 chown -R redis.0 /var/lib/redis \u0026\u0026     [[ \"$(id redis)\" == \"uid=1001(redis)\"* ]]","empty_layer":true},{"created":"2024-10-23T02:20:58.242392817Z","created_by":"/bin/sh -c #(nop) ENV CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/redis     REDIS_PREFIX=/usr     REDIS_CONF=/etc/redis/redis.conf","empty_layer":true},{"created":"2024-10-23T02:20:58.374136495Z","created_by":"/bin/sh -c #(nop) COPY dir:593c42a0b4866e90301840a919b1817f959a5623cb3f60e4e742bdb2d24b46a3 in / ","empty_layer":true},{"created":"2024-10-23T02:20:58.560297671Z","created_by":"/bin/sh -c /usr/libexec/container-setup","empty_layer":true},{"created":"2024-10-23T02:20:58.580081613Z","created_by":"/bin/sh -c #(nop) VOLUME [\"/var/lib/redis/data\"]","empty_layer":true},{"created":"2024-10-23T02:20:58.599565457Z","created_by":"/bin/sh -c #(nop) USER 1001","empty_layer":true},{"created":"2024-10-23T02:20:58.620878466Z","created_by":"/bin/sh -c #(nop) ENTRYPOINT [\"container-entrypoint\"]","empty_layer":true},{"created":"2024-10-23T02:20:58.985327422Z","created_by":"/bin/sh -c #(nop) CMD [\"run-redis\"]","comment":"FROM quay.io/fedora/s2i-core:38"}]}